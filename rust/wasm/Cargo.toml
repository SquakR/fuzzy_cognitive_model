[package]
name = "fuzzy-cognitive-model-wasm"
description = """
WebAssembly application for structural and parametric adjustment of fuzzy cognitive models based on genetic algorithms.
"""
version = "0.1.0"
authors = ["Artem Orlov <squakrazv@gmail.com>"]
homepage = "https://github.com/SquakR/fuzzy_cognitive_model#readme"
repository = "https://github.com/SquakR/fuzzy_cognitive_model"
license = "MIT"
keywords = [
  "fuzzy",
  "cognitive map",
  "genetic algorithm"
]
categories = ["algorithms", "science"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
fuzzy_cognitive_model_common = { path = "../common" }
wasm-bindgen = "0.2.63"
wasm-bindgen-futures = "0.4.34"
js-sys = "0.3.63"
web-sys = { version = "0.3.63", features = ["Window"] }
serde = { version = "1.0.155", features = ["derive"] }
serde-wasm-bindgen = "0.4"
getrandom = { version = "0.2", features = ["js"] }
async-trait = "0.1.68"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
